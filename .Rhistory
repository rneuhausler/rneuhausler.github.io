cex.labels = 2, font.labels = 2, col = cols)
panel.cor = function(x, y, digits=2, prefix="", cex.cor, ...){
usr = par("usr")
on.exit(par(usr))
par(usr = c(0,1,0,1))
r = abs(cor(x,y,use='complete.obs'))
txt=format(c(r,0.123456789),digits=digits)[1]
txt=paste(prefix,txt,sep='')
if(missing(cex.cor)) cex.cor = 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor*(1+r)/2)
}
panel.hist = function(x, ...){
usr = par('usr')
on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5))
h = hist(x, plot=FALSE)
breaks = h$breaks
nB = length(breaks)
y=h$counts
y=y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, ...)
}
#image1$type = image1$label + 1
cols <- character(nrow(image1))
cols[] <- "black"
cols[image1$label == 0] <- "blue"
cols[image1$label == 1] <- "red"
image1[,7:11] %>%
pairs(upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2, col = cols)
library(reshape2)
d <- melt(image1, id = 1:6, measure = 7:11)
#where id can be a vector of integers (of column indices) or strings (of column names) for id variables, and measure is a vector that gives the positions of #the various measures (the markers in this case). Then call ggplot:
library(ggplot2)
ggplot(d, aes(x, y, color = as.interger(label))) +
geom_point() +
facet_wrap(~ variable)
library(reshape2)
d <- melt(image1, id = 1:6, measure = 7:11)
#where id can be a vector of integers (of column indices) or strings (of column names) for id variables, and measure is a vector that gives the positions of #the various measures (the markers in this case). Then call ggplot:
library(ggplot2)
ggplot(d, aes(x, y, color = as.integer(label))) +
geom_point() +
facet_wrap(~ variable)
View(d)
library(reshape2)
d <- melt(image1, id = 1:6, measure = 7:11)
#where id can be a vector of integers (of column indices) or strings (of column names) for id variables, and measure is a vector that gives the positions of #the various measures (the markers in this case). Then call ggplot:
library(ggplot2)
ggplot(d, aes(x, y, color = value)) +
geom_point() +
facet_wrap(~ variable)
library(reshape2)
d <- melt(image1, id = 1:6, measure = 7:11)
#where id can be a vector of integers (of column indices) or strings (of column names) for id variables, and measure is a vector that gives the positions of #the various measures (the markers in this case). Then call ggplot:
library(ggplot2)
ggplot(d, aes(x, y, color = value)) +
geom_point() +
facet_wrap(~ variable)
library(reshape2)
d <- melt(image1, id = 1:6, measure = 7:11)
ggplot(d, aes(x, y, color = value)) +
geom_point() +
facet_wrap(~ variable)
library(reshape2)
d <- melt(image2, id = 1:6, measure = 7:11)
ggplot(d, aes(x, y, color = value)) +
geom_point() +
facet_wrap(~ variable)
d <- melt(image3, id = 1:6, measure = 7:11)
ggplot(d, aes(x, y, color = value)) +
geom_point() +
facet_wrap(~ variable)
#image1$type = image1$label + 1
#cols <- character(nrow(image1))
#cols[] <- "black"
#cols[image1$label == 0] <- "blue"
#cols[image1$label == 1] <- "red"
image1[,7:11] %>%
filter(label == -1)
#image1$type = image1$label + 1
#cols <- character(nrow(image1))
#cols[] <- "black"
#cols[image1$label == 0] <- "blue"
#cols[image1$label == 1] <- "red"
image1 %>%
filter(label == -1) %>%
select(image1[,7:11]) %>%
pairs(upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2)
#image1$type = image1$label + 1
#cols <- character(nrow(image1))
#cols[] <- "black"
#cols[image1$label == 0] <- "blue"
#cols[image1$label == 1] <- "red"
image1 %>%
filter(label == -1) %>%
select('DF','CF','BF','AF','AN') %>%
pairs(upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2)
image1 %>%
filter(label == 0) %>%
select('DF','CF','BF','AF','AN') %>%
pairs(upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2, alpha = .5)
image1 %>%
filter(label == 0) %>%
select('DF','CF','BF','AF','AN') %>%
pairs(upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2)
image1 %>%
filter(label == 1) %>%
select('DF','CF','BF','AF','AN') %>%
pairs(upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2)
d <- melt(image1, id = 1:3, measure = 4:6)
ggplot(d, aes(x, y, color = value)) +
geom_point() +
facet_wrap(~ variable)
ggplot(image1, aes(x, y, color = NDAI)) +
geom_point()
ggplot(image1, aes(x, y, color = SD)) +
geom_point()
ggplot(image1, aes(x, y, color = CORR)) +
geom_point()
image1 %>%
filter(label == 0) %>%
select('NDAI','SD','CORR') %>%
pairs(upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2)
image1 %>%
filter(label == -1) %>%
select('NDAI','SD','CORR') %>%
pairs(upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2)
image1 %>%
filter(label == 1) %>%
select('NDAI','SD','CORR') %>%
pairs(upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2)
ggplot(images1, aes(x, y, color = NDAI)) +
geom_point() +
facet_wrap(~ label)
ggplot(image1, aes(x, y, color = NDAI)) +
geom_point() +
facet_wrap(~ label)
ggplot(image1, aes(x, y, color = CORR)) +
geom_point() +
facet_wrap(~ label)
ggplot(image1, aes(x, y, color = SD)) +
geom_point() +
facet_wrap(~ label)
d <- melt(image1, id = 1:6, measure = 7:11)
ggplot(d, aes(x, y, color = label)) +
geom_point() +
facet_wrap(~ variable)
#generally shifted, maybe add a gaussian filter?
d <- melt(image1, id = 1:6, measure = 7:11)
ggplot(d) +
geom_bar(value) +
facet_grid(label ~ variable)
d <- melt(image1, id = 1:6, measure = 7:11)
ggplot(d) +
geom_bar(d$value) +
facet_grid(label ~ variable)
d <- melt(image1, id = 1:6, measure = 7:11)
ggplot(d) +
geom_bar(aes(d$value)) +
facet_grid(label ~ variable)
#generally shifted, maybe add a gaussian filter?
d <- melt(image1, id = 1:3, measure = 4:6)
ggplot(d, aes(x, y, color = value)) +
geom_bar(aes(d$value)) +
facet_wrap(label ~ variable)
d <- melt(image1, id = 1:3, measure = 4:6)
d %>%
ggplot() +
geom_bar(aes(value)) +
facet_wrap(label ~ variable)
d <- melt(image1, id = 1:3, measure = 4:6)
d %>%
ggplot(aes(value)) +
geom_bar() +
facet_wrap(label ~ variable)
d <- melt(image1, id = 1:3, measure = 4:6)
ggplot(d,aes(value)) +
geom_bar() +
facet_wrap(label ~ variable)
d <- melt(image1, id = 1:6, measure = 7:11)
ggplot(d, aes(x = value)) +
geom_bar() +
facet_grid(label ~ variable)
ggplot(image1) +
geom_density(aes(x = AN, group = factor(label), fill = factor(label)),
alpha = 0.5) +
scale_fill_discrete(name = "Expert label")
d <- melt(image1, id = 1:6, measure = 7:11)
ggplot(image1) +
geom_density(aes(x = value, group = factor(label), fill = factor(label)),
alpha = 0.5) +
scale_fill_discrete(name = "Expert label") +
facet_wrap(~variable)
d <- melt(image1, id = 1:6, measure = 7:11)
ggplot(image1) +
geom_density(aes(x = value, group = factor(label), fill = factor(label)),
alpha = 0.5) +
#scale_fill_discrete(name = "Expert label") +
facet_wrap(~ variable)
d <- melt(image1, id = 1:6, measure = 7:11)
ggplot(image1, aes(x = value, group = factor(label), fill = factor(label)),
alpha = 0.5) +
geom_density() +
#scale_fill_discrete(name = "Expert label") +
facet_wrap(~ variable)
d <- melt(image1, id = 1:6, measure = 7:11)
p = ggplot(image1, aes(x = value, group = factor(label), fill = factor(label))) +
geom_density(alpha = 0.5) +
#scale_fill_discrete(name = "Expert label") +
p + facet_wrap(~ variable)
d <- melt(image1, id = 1:6, measure = 7:11)
p = ggplot(image1, aes(x = value, group = factor(label), fill = factor(label))) +
geom_density(alpha = 0.5)
#scale_fill_discrete(name = "Expert label") +
p + facet_wrap(~ variable)
d <- melt(image1, id = 1:6, measure = 7:11)
p = ggplot(image1, aes(x = value, group = factor(label), fill = factor(label))) +
geom_density(alpha = 0.5)
#scale_fill_discrete(name = "Expert label") +
p + facet_grid(variable ~ .)
d <- melt(image1, id = 1:6, measure = 7:11)
p = ggplot(image1, aes(x = value, fill = factor(label))) +
geom_density(alpha = 0.5)
#scale_fill_discrete(name = "Expert label") +
p + facet_grid(variable ~ .)
d <- melt(image1, id = 1:6, measure = 7:11)
p = ggplot(image1, aes(x = value, fill = factor(label))) +
geom_density(alpha = 0.5)
#scale_fill_discrete(name = "Expert label") +
p + facet_grid(~ variable )
d <- melt(image1, id = 1:6, measure = 7:11)
p = ggplot(d, aes(x = value, fill = factor(label))) +
geom_density(alpha = 0.5)
#scale_fill_discrete(name = "Expert label") +
p + facet_grid(~ variable )
d <- melt(image1, id = 1:6, measure = 7:11)
p = ggplot(d, aes(x = value, group = factor(label), fill = factor(label))) +
geom_density(alpha = 0.5)
#scale_fill_discrete(name = "Expert label") +
p + facet_grid(~ variable )
d <- melt(image1, id = 1:6, measure = 7:11)
p = ggplot(d, aes(x = value, group = factor(label), fill = factor(label))) +
geom_density(alpha = 0.5)
#scale_fill_discrete(name = "Expert label") +
p + facet_grid(~ variable, ncol = 3 )
?facet_grid
d <- melt(image1, id = 1:6, measure = 7:11)
p = ggplot(d, aes(x = value, group = factor(label), fill = factor(label))) +
geom_density(alpha = 0.5)
#scale_fill_discrete(name = "Expert label") +
p + facet_wrap(~ variable, ncol = 3 )
d <- melt(image1, id = 1:6, measure = 7:11)
ggplot(d, aes(x = value, group = factor(label), fill = factor(label))) +
geom_density(alpha = 0.5)
scale_fill_discrete(name = "Expert label") + facet_wrap(~ variable, ncol = 3 )
d <- melt(image1, id = 1:6, measure = 7:11)
ggplot(d, aes(x = value, group = factor(label), fill = factor(label))) +
geom_density(alpha = 0.5)
scale_fill_discrete(name = "Expert label")
p + facet_wrap(~ variable, ncol = 3 )
d <- melt(image3, id = 1:3, measure = 7:11)
ggplot(d, aes(x = value, group = factor(label), fill = factor(label))) +
geom_density(alpha = 0.5)
scale_fill_discrete(name = "Expert label")
p + facet_wrap(~ variable, ncol = 3 )
d <- melt(image3, id = 1:3, measure = 4:6)
ggplot(d, aes(x = value, group = factor(label), fill = factor(label))) +
geom_density(alpha = 0.5)
scale_fill_discrete(name = "Expert label")
p + facet_wrap(~ variable, ncol = 3 )
d <- melt(image1, id = 1:3, measure = 4:6)
ggplot(d, aes(x = value, group = factor(label), fill = factor(label))) +
geom_density(alpha = 0.5)
scale_fill_discrete(name = "Expert label")
p + facet_wrap(~ variable, ncol = 3 )
#install.packages('cowplot')
library(dplyr)
library(ggplot2)
#library(cowplot)
library(reshape2)
#Theme setup for plotting
blank_theme <- theme_bw() +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = 10),
axis.title=element_text(size=10))
# Get the data for three images
path <- 'image_data/'
image1 <- read.table(paste0(path, 'image1.txt'), header = F)
image2 <- read.table(paste0(path, 'image2.txt'), header = F)
image3 <- read.table(paste0(path, 'image3.txt'), header = F)
# Add informative column names.
collabs <- c('y','x','label','NDAI','SD','CORR','DF','CF','BF','AF','AN')
names(image1) <- collabs
names(image2) <- collabs
names(image3) <- collabs
# Plot the expert pixel-level classification
image1$image = 1
image2$image = 2
image3$image = 3
images <- dplyr::bind_rows(image1, image2)
images <- dplyr::bind_rows(images, image3)
images %>%
ggplot() +
geom_point(aes(x = x, y = y, color = factor(label))) +
facet_wrap(~ image, ncol = 3) +
ggtitle('') +
blank_theme
panel.cor = function(x, y, digits=2, prefix="", cex.cor, ...){
usr = par("usr")
on.exit(par(usr))
par(usr = c(0,1,0,1))
r = abs(cor(x,y,use='complete.obs'))
txt=format(c(r,0.123456789),digits=digits)[1]
txt=paste(prefix,txt,sep='')
if(missing(cex.cor)) cex.cor = 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor*(1+r)/2)
}
panel.hist = function(x, ...){
usr = par('usr')
on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5))
h = hist(x, plot=FALSE)
breaks = h$breaks
nB = length(breaks)
y=h$counts
y=y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, ...)
}
d <- melt(image1, id = 1:3, measure = 4:6)
ggplot(d, aes(x = value, group = factor(label), fill = factor(label))) +
geom_density(alpha = 0.5)
scale_fill_discrete(name = "Expert label")
p + facet_wrap(~ variable, ncol = 3 )
d <- melt(image1, id = 1:3, measure = 4:6)
p = ggplot(d, aes(x = value, group = factor(label), fill = factor(label))) +
geom_density(alpha = 0.5)
scale_fill_discrete(name = "Expert label")
p + facet_wrap(~ variable, ncol = 3 )
d <- melt(image1, id = 1:6, measure = 7:11)
p <- ggplot(d, aes(x = value, group = factor(label), fill = factor(label))) +
geom_density(alpha = 0.5)
scale_fill_discrete(name = "Expert label")
p + facet_wrap(~ variable, ncol = 3 )
d <- melt(image1, id = 1:3, measure = 4:5)
p = ggplot(d, aes(x = value, group = factor(label), fill = factor(label))) +
geom_density(alpha = 0.5)
scale_fill_discrete(name = "Expert label")
p + facet_wrap(~ variable, ncol = 3 )
d <- melt(image2, id = 1:6, measure = 7:11)
ggplot(d, aes(x, y, color = value)) +
geom_point() +
facet_wrap(~ variable)
ggplot(image1, aes(x, y, color = SD)) +
geom_point() +
facet_wrap(~ label)
ggplot(image1, aes(x, y, color = CORR)) +
geom_point() +
facet_wrap(~ label)
ggplot(image1, aes(x, y, color = NDAI)) +
geom_point() +
facet_wrap(~ label)
image1 %>%
filter(label == 1) %>%
select('NDAI','SD','CORR') %>%
pairs(upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2)
image1 %>%
filter(label == -1) %>%
select('NDAI','SD','CORR') %>%
pairs(upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2)
image1 %>%
filter(label == 0) %>%
select('NDAI','SD','CORR') %>%
pairs(upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2)
ggplot(image1, aes(x, y, color = CORR)) +
geom_point()
ggplot(image1, aes(x, y, color = SD)) +
geom_point()
ggplot(image1, aes(x, y, color = NDAI)) +
geom_point()
d <- melt(image1, id = 1:3, measure = 4:6)
ggplot(d,aes(value)) +
geom_bar() +
facet_wrap(label ~ variable)
d <- melt(image1, id = 1:3, measure = 4:6)
p <- ggplot(d,aes(value)) +
geom_bar()
p+ facet_wrap(label ~ variable)
d <- melt(image1, id = 1:3, measure = 4:6)
ggplot(d, aes(x, y, color = value)) +
geom_point() +
facet_wrap(~variable)
d <- melt(image3, id = 1:3, measure = 7:11)
ggplot(d, aes(x, y, color = value)) +
geom_point() +
facet_wrap(~ variable)
d <- melt(image1, id = 1:3, measure = 4:6)
p = ggplot(d, aes(x = value, group = factor(label), fill = factor(label))) +
geom_density(alpha = 0.5)
scale_fill_discrete(name = "Expert label")
p + facet_wrap(~ variable, ncol = 3 )
d <- melt(image1, id = 1:3, measure = 4:5)
p = ggplot(d, aes(x = value, group = factor(label), fill = factor(label))) +
geom_density(alpha = 0.5)
scale_fill_discrete(name = "Expert label")
p + facet_wrap(~ variable, ncol = 3 )
d <- melt(image1, id = 1:6, measure = 7:11)
p <- ggplot(d, aes(x = value, group = factor(label), fill = factor(label))) +
geom_density(alpha = 0.5)
scale_fill_discrete(name = "Expert label")
p + facet_wrap(~ variable, ncol = 3 ) + blank_theme
knitr::opts_chunk$set(echo = TRUE)
library(glmnet)
library(glmnet)
load("QuickStartExample.RData")
load(paste0(path, 'FMRIdata.RData'))
path = 'data/'
load(paste0(path, 'FMRIdata.RData'))
path = 'data/'
load(paste0(path, 'FMRIdata.RData'))
path = './data/'
load(paste0(path, 'FMRIdata.RData'))
path = '~/data/'
load(paste0(path, 'FMRIdata.RData'))
library(caret)
library(glmnet)
library(ggplot2)
library(dplyr)
source('utility_functions.R')
library(leaflet)
library(tidyverse)
library(tidyverse)
library(rgdal)
library(maps)
library(leaflet)
library(sp)
library(sp)
library(sf)
library(rgeos)
library(tidyverse)
library(rgdal)
library(maps)
library(leaflet)
library(sp)
library(sf)
contaminants <- read.csv(paste0(path,"contaminant.txt"))
path = "../../data/superfund_shapefiles/" #Jacob
path = "./superfund_shapefiles/" #Rosanna
points <- readOGR(paste0(path, "demographic_data.shp"))
points <- readOGR(paste0(path, "superfund_npl_flood_ranked.shp"))
shapefile <-data.frame(points)
contaminants <- read.csv(paste0(path,"contaminant.txt"))
toxicity <- read.csv(paste0(path,"toxins.csv"))
toxicity <- read.csv(paste0(path,"toxins.csv"))
points <- readOGR(paste0(path, "demographic_data.shp"))
demographic <-data.frame(points)
shapefile <- tibble::rowid_to_column(shapefile, "ID") # to keep track of sites
df <- left_join(shapefile, contaminants, by = c('EPA_ID' = "EPAFacilityID"))
df <- left_join(df, toxicity, by = c('ContaminantName'='Name'))
setwd("/Users/rosannaneuhausler/Documents/Website/rneuhausler.github.io")
rmarkdown::render_site()
getwd()
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
